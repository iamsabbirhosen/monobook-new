{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/components/ImageReader.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\ninterface ImageReaderProps {\r\n  bookId: string;\r\n  totalPages: number;\r\n  onPageChange?: (page: number) => void;\r\n}\r\n\r\nexport function ImageReader({ bookId, totalPages, onPageChange }: ImageReaderProps) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [actualTotalPages, setActualTotalPages] = useState(totalPages);\r\n\r\n  useEffect(() => {\r\n    // Function to check if an image exists\r\n    const checkImageExists = async (pageNum: number): Promise<boolean> => {\r\n      try {\r\n        const response = await fetch(`/pdfbooks/${bookId}/${pageNum}.jpg`, { method: 'HEAD' });\r\n        return response.ok;\r\n      } catch {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    // Function to find the actual total number of pages\r\n    const findTotalPages = async () => {\r\n      let page = 1;\r\n      while (await checkImageExists(page)) {\r\n        page++;\r\n      }\r\n      setActualTotalPages(page - 1);\r\n    };\r\n\r\n    findTotalPages();\r\n  }, [bookId]);\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    if (newPage >= 1 && newPage <= actualTotalPages) {\r\n      setCurrentPage(newPage);\r\n      setIsLoading(true);\r\n      onPageChange?.(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center bg-card rounded-lg p-4 overflow-hidden\">\r\n      <div className=\"flex-grow w-full flex items-center justify-center relative h-[calc(100vh-12rem)]\">\r\n        {isLoading && (\r\n          <Skeleton className=\"w-full h-full absolute inset-0\" />\r\n        )}\r\n        <div className=\"relative w-full h-full\">\r\n          <Image\r\n            src={`/pdfbooks/${bookId}/${currentPage}.jpg`}\r\n            alt={`Page ${currentPage}`}\r\n            fill\r\n            style={{\r\n              objectFit: 'contain',\r\n              opacity: isLoading ? 0 : 1\r\n            }}\r\n            priority\r\n            onLoad={() => setIsLoading(false)}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex items-center gap-4 mt-4\">\r\n        <Button \r\n          onClick={() => handlePageChange(currentPage - 1)} \r\n          disabled={currentPage <= 1}\r\n        >\r\n          <ChevronLeft className=\"mr-2\" /> Previous\r\n        </Button>\r\n        <p className=\"text-sm font-medium\">\r\n          Page {currentPage} of {actualTotalPages}\r\n        </p>\r\n        <Button \r\n          onClick={() => handlePageChange(currentPage + 1)} \r\n          disabled={currentPage >= actualTotalPages}\r\n        >\r\n          Next <ChevronRight className=\"ml-2\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AACA;;;AANA;;;;;;AAcO,SAAS,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAoB;;IAChF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,uCAAuC;YACvC,MAAM;0DAAmB,OAAO;oBAC9B,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,QAAQ,IAAI,CAAC,EAAE;4BAAE,QAAQ;wBAAO;wBACpF,OAAO,SAAS,EAAE;oBACpB,EAAE,OAAM;wBACN,OAAO;oBACT;gBACF;;YAEA,oDAAoD;YACpD,MAAM;wDAAiB;oBACrB,IAAI,OAAO;oBACX,MAAO,MAAM,iBAAiB,MAAO;wBACnC;oBACF;oBACA,oBAAoB,OAAO;gBAC7B;;YAEA;QACF;gCAAG;QAAC;KAAO;IAEX,MAAM,mBAAmB,CAAC;QACxB,IAAI,WAAW,KAAK,WAAW,kBAAkB;YAC/C,eAAe;YACf,aAAa;YACb,eAAe;QACjB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;oBACZ,2BACC,6LAAC,uIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCAEtB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,EAAE,YAAY,IAAI,CAAC;4BAC7C,KAAK,CAAC,KAAK,EAAE,aAAa;4BAC1B,IAAI;4BACJ,OAAO;gCACL,WAAW;gCACX,SAAS,YAAY,IAAI;4BAC3B;4BACA,QAAQ;4BACR,QAAQ,IAAM,aAAa;;;;;;;;;;;;;;;;;0BAKjC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,iBAAiB,cAAc;wBAC9C,UAAU,eAAe;;0CAEzB,6LAAC,uNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;4BAAS;;;;;;;kCAElC,6LAAC;wBAAE,WAAU;;4BAAsB;4BAC3B;4BAAY;4BAAK;;;;;;;kCAEzB,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,iBAAiB,cAAc;wBAC9C,UAAU,eAAe;;4BAC1B;0CACM,6LAAC,yNAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKvC;GA5EgB;KAAA","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/ai/flows/explain-difficult-page.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview AI flow to explain a difficult page of a book.\r\n *\r\n * - explainDifficultPage - A function that explains the content of a difficult page.\r\n * - ExplainDifficultPageInput - The input type for the explainDifficultPage function.\r\n * - ExplainDifficultPageOutput - The return type for the explainDifficultPage function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { createWorker, createScheduler, RecognizeResult, WorkerParams } from 'tesseract.js';\r\n\r\nconst ExplainDifficultPageInputSchema = z.object({\r\n  imageUrl: z.string().describe('The URL of the page image to analyze'),\r\n  prompt: z.string().describe('The prompt to send to Gemini'),\r\n  apiKey: z.string().describe('The Gemini API key'),\r\n});\r\nexport type ExplainDifficultPageInput = z.infer<typeof ExplainDifficultPageInputSchema>;\r\n\r\nconst ExplainDifficultPageOutputSchema = z.object({\r\n  explanation: z\r\n    .string()\r\n    .describe('The explanation of the page content in an easy-to-understand way.'),\r\n});\r\nexport type ExplainDifficultPageOutput = z.infer<typeof ExplainDifficultPageOutputSchema>;\r\n\r\nexport async function explainDifficultPage(\r\n  input: ExplainDifficultPageInput\r\n): Promise<ExplainDifficultPageOutput> {\r\n  return explainDifficultPageFlow(input);\r\n}\r\n\r\nconst extractTextFromImage = async (imagePath: string) => {\r\n  console.log('Initializing Tesseract worker...');\r\n  const worker = await createWorker();\r\n  \r\n  try {\r\n    // Initialize worker with both English and Bengali\r\n    await worker.loadLanguage('eng+ben');\r\n    await worker.initialize('eng+ben');\r\n    \r\n    // Set PSM to handle multi-column text\r\n    await worker.setParameters({\r\n      tessedit_pageseg_mode: 1, // Automatic page segmentation with OSD\r\n      tessedit_ocr_engine_mode: 2, // Legacy + LSTM engines\r\n      preserve_interword_spaces: '1',\r\n    });\r\n\r\n    console.log('Processing image with Tesseract...');\r\n    const { data: { text } } = await worker.recognize(imagePath);\r\n    console.log('Raw extracted text:', text.substring(0, 200) + '...');\r\n\r\n    // Clean up the extracted text\r\n    const cleanedText = text\r\n      .replace(/\\s+/g, ' ')  // Replace multiple spaces with single space\r\n      .replace(/[\\r\\n]+/g, '\\n')  // Replace multiple newlines with single newline\r\n      .trim();\r\n\r\n    await worker.terminate();\r\n    return cleanedText;\r\n  } catch (error) {\r\n    console.error('Tesseract error:', error);\r\n    await worker.terminate();\r\n    throw new Error(`Text extraction failed: ${error.message || 'Unknown error'}`);\r\n  }\r\n};\r\n\r\nconst analyzeImage = async (imageUrl: string, prompt: string, apiKey: string) => {\r\n  if (!apiKey || apiKey.trim() === '') {\r\n    throw new Error('Invalid API key: API key is required');\r\n  }\r\n  try {\r\n    // Extract bookId and page number from the URL\r\n    const urlParts = imageUrl.split('/');\r\n    const bookId = urlParts[urlParts.length - 2];\r\n    const fileName = urlParts[urlParts.length - 1];\r\n    \r\n    // Construct the file path relative to public directory\r\n    const imagePath = path.join(process.cwd(), 'public', 'pdfbooks', bookId, fileName);\r\n    console.log('Reading image from:', imagePath);\r\n    \r\n    // Extract text from image using Tesseract\r\n    console.log('Extracting text from image...');\r\n    const extractedText = await extractTextFromImage(imagePath);\r\n    console.log('Extracted text:', extractedText.substring(0, 100) + '...');\r\n    \r\n    // Initialize Gemini\r\n    const genAI = new GoogleGenerativeAI(apiKey);\r\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" }); // Using text-only model\r\n    \r\n    // Prepare prompt with extracted text\r\n    const enhancedPrompt = `\r\nThe following text is extracted from a textbook page. Please teach this content like an ideal teacher with examples:\r\n\r\n${extractedText}\r\n\r\nPlease provide:\r\n1. A clear explanation of the main concepts\r\n2. Real-world examples to illustrate the concepts\r\n3. Key points to remember\r\n4. Practice questions if applicable\r\n    `.trim();\r\n    \r\n    console.log('Sending request to Gemini with enhanced prompt...');\r\n    const result = await model.generateContent(enhancedPrompt);\r\n    const response = await result.response;\r\n    const text = response.text();\r\n    console.log('Received response from Gemini:', text.substring(0, 100) + '...'); // Show first 100 chars\r\n    \r\n    return text;\r\n  } catch (error) {\r\n    console.error('Error in analyzeImage:', error);\r\n    if (error instanceof Error) {\r\n      throw new Error(`Image analysis failed: ${error.message}`);\r\n    } else {\r\n      throw new Error('Image analysis failed: Unknown error');\r\n    }\r\n  }\r\n};\r\n\r\nconst blobToBase64 = (blob: Blob): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        resolve(reader.result.split(',')[1]);\r\n      } else {\r\n        reject(new Error('Failed to convert blob to base64'));\r\n      }\r\n    };\r\n    reader.onerror = reject;\r\n    reader.readAsDataURL(blob);\r\n  });\r\n};\r\n\r\nconst explainDifficultPageFlow = ai.defineFlow(\r\n  {\r\n    name: 'explainDifficultPageFlow',\r\n    inputSchema: ExplainDifficultPageInputSchema,\r\n    outputSchema: ExplainDifficultPageOutputSchema,\r\n  },\r\n  async input => {\r\n    const explanation = await analyzeImage(input.imageUrl, input.prompt, input.apiKey);\r\n    return { explanation };\r\n    return { explanation };\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA+BsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///E:/MonoBook%20New%20Interface/monobook-new/src/app/reader/%5BbookId%5D/ReaderClient.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Sparkles,\r\n  Lightbulb,\r\n} from 'lucide-react';\r\n\r\nimport type { Book } from '@/lib/types';\r\nimport { useAppContext } from '@/context/AppContext';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { ImageReader } from '@/components/ImageReader';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { explainDifficultPage } from '@/ai/flows/explain-difficult-page';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\n\r\n\r\nexport default function ReaderClient({ book }: { book: Book }) {\r\n  const {\r\n    getNote,\r\n    updateNote,\r\n    logReadingTime,\r\n    logPageRead,\r\n    isBookInLibrary,\r\n    isHydrated,\r\n  } = useAppContext();\r\n  const { toast } = useToast();\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [note, setNote] = useState('');\r\n  const [isAiHelperOpen, setIsAiHelperOpen] = useState(false);\r\n  const [aiExplanation, setAiExplanation] = useState('');\r\n  const [isAiLoading, setIsAiLoading] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(999); // Set to a high number, ImageReader will find actual count\r\n\r\n  const pageTextRef = useRef<string>('');\r\n  const readingSinceRef = useRef<number>(Date.now());\r\n\r\n  const hasAccess = isBookInLibrary(book.id);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const seconds = (Date.now() - readingSinceRef.current) / 1000;\r\n      if (seconds > 0) {\r\n        logReadingTime(seconds);\r\n        readingSinceRef.current = Date.now();\r\n      }\r\n    }, 5000); // Log time every 5 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      // Log any remaining time on unmount\r\n      const seconds = (Date.now() - readingSinceRef.current) / 1000;\r\n      if (seconds > 0) logReadingTime(seconds);\r\n    };\r\n  }, [logReadingTime]);\r\n\r\n  useEffect(() => {\r\n    if (hasAccess) {\r\n      setNote(getNote(book.id, pageNumber));\r\n      logPageRead(book.id, pageNumber);\r\n    }\r\n  }, [pageNumber, book.id, getNote, hasAccess, logPageRead]);\r\n\r\n  const handleNoteChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newNote = e.target.value;\r\n    setNote(newNote);\r\n    updateNote(book.id, pageNumber, newNote);\r\n  };\r\n\r\n  const handleAiHelp = async () => {\r\n    setIsAiHelperOpen(true);\r\n    setIsAiLoading(true);\r\n    setAiExplanation('');\r\n    try {\r\n      // Get the full URL including the hostname\r\n      const baseUrl = window.location.origin;\r\n      const imageUrl = `${baseUrl}/pdfbooks/${book.id}/${pageNumber}.jpg`;\r\n      console.log('Attempting to analyze image:', imageUrl); // Debug log\r\n      \r\n      const prompt = \"Attached image is from my textbooks page, teach me this page like an ideal teacher with example\";\r\n      const result = await explainDifficultPage({ \r\n        imageUrl,\r\n        prompt,\r\n        apiKey: 'AIzaSyC7TooMO4Hdn7szn_5m9UmCNFcfkyYPqYQ'\r\n      });\r\n      \r\n      if (!result?.explanation) {\r\n        throw new Error('No explanation received from AI');\r\n      }\r\n      \r\n      setAiExplanation(result.explanation);\r\n    } catch (error) {\r\n      console.error('AI Helper Error:', error); // Detailed error logging\r\n      setAiExplanation('Sorry, an error occurred while trying to explain this page.');\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'AI Helper Error',\r\n        description: error.message || 'Could not generate an explanation.',\r\n      });\r\n    } finally {\r\n      setIsAiLoading(false);\r\n    }\r\n  };\r\n\r\n  function changePage(offset: number) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  if (isHydrated && !hasAccess) {\r\n    return (\r\n      <div className=\"container mx-auto flex h-[calc(100vh-3.5rem)] flex-col items-center justify-center text-center\">\r\n        <h2 className=\"text-2xl font-bold\">Access Denied</h2>\r\n        <p className=\"mt-2 text-muted-foreground\">You do not own this book. Please purchase it to read.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid md:grid-cols-[1fr_350px] gap-4 p-4 h-[calc(100vh-3.5rem)]\">\r\n      {/* Reader View */}\r\n      <ImageReader\r\n        bookId={book.id}\r\n        totalPages={totalPages}\r\n        onPageChange={(page) => {\r\n          setPageNumber(page);\r\n          if (hasAccess) {\r\n            logPageRead(book.id, page);\r\n          }\r\n        }}\r\n      />\r\n\r\n      {/* Sidebar for Notes and AI */}\r\n      <div className=\"hidden md:flex flex-col gap-4\">\r\n        <div className=\"bg-card p-4 rounded-lg flex-grow flex flex-col\">\r\n            <h3 className=\"font-headline text-lg font-semibold mb-2\">My Notes</h3>\r\n            <Textarea\r\n                placeholder={`Notes for page ${pageNumber}...`}\r\n                value={note}\r\n                onChange={handleNoteChange}\r\n                className=\"flex-grow resize-none text-base\"\r\n            />\r\n        </div>\r\n        <div className=\"bg-card p-4 rounded-lg\">\r\n          <h3 className=\"font-headline text-lg font-semibold mb-2\">Study Tools</h3>\r\n          <Button className=\"w-full mb-2\" onClick={handleAiHelp}>\r\n            <Sparkles className=\"mr-2 h-4 w-4\" /> Need help with this page?\r\n          </Button>\r\n          <Button variant=\"outline\" className=\"w-full\" disabled>\r\n            <Lightbulb className=\"mr-2 h-4 w-4\" /> Highlight (UI Only)\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* AI Helper Dialog */}\r\n      <Dialog open={isAiHelperOpen} onOpenChange={setIsAiHelperOpen}>\r\n        <DialogContent className=\"sm:max-w-[625px]\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2 font-headline text-2xl\">\r\n              <Sparkles className=\"text-primary\" /> AI Study Helper\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              Here's a simplified explanation of the content on page {pageNumber}.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <ScrollArea className=\"max-h-[60vh] pr-6\">\r\n            {isAiLoading ? (\r\n              <div className=\"space-y-2\">\r\n                <Skeleton className=\"h-4 w-[80%]\" />\r\n                <Skeleton className=\"h-4 w-full\" />\r\n                <Skeleton className=\"h-4 w-[90%]\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"prose prose-sm dark:prose-invert max-w-none whitespace-pre-wrap font-body text-base\">\r\n                {aiExplanation}\r\n              </div>\r\n            )}\r\n          </ScrollArea>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}